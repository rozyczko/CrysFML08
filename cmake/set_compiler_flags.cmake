macro(set_compiler_flags)

    # Nullify all the Fortran flags.
    set(CMAKE_Fortran_FLAGS "")
    set(CMAKE_Fortran_FLAGS_DEBUG "")

    get_filename_component(COMPILER_NAME ${CMAKE_Fortran_COMPILER} NAME_WE)

    if(WIN32)
        if(COMPILER_NAME STREQUAL ifort)
            if(CMAKE_BUILD_TYPE STREQUAL Debug)
                if (HEAP_ARRAYS)
                    set(CMAKE_Fortran_FLAGS_DEBUG "/debug:full /traceback /nologo /fpp /Qopt-report=0 /heap-arrays")
                else()
                    set(CMAKE_Fortran_FLAGS_DEBUG "/debug:full /traceback /nologo /fpp /Qopt-report=0")
                endif()
                set(OPT_FLAGS0 "/Od /check:noarg_temp_created ")
                set(OPT_FLAGS  "/Od /check:noarg_temp_created ")
                set(OPT_FLAGS1 "/Od /check:noarg_temp_created ")
                set(OPT_FLAGS2 "/Od /check:noarg_temp_created ")
                set(OPT_FLAGS3 "/Od /check:noarg_temp_created ")
            elseif(CMAKE_BUILD_TYPE STREQUAL Release)
                if (HEAP_ARRAYS)
                    set(CMAKE_Fortran_FLAGS_RELEASE "/Qopt-report=0 /nologo /heap-arrays")
                else()
                    set(CMAKE_Fortran_FLAGS_RELEASE "/Qopt-report=0 /nologo")
                endif()
		        if (QPARALLEL)
                       set(OPT_FLAGS0 "/Od")
                       set(OPT_FLAGS  "/O2 /Qparallel")
                       set(OPT_FLAGS1 "/O1")
                       set(OPT_FLAGS2 "/O2 /Qparallel")
                       set(OPT_FLAGS3 "/O3 /Qparallel")
		        else()
		               set(OPT_FLAGS0 "/Od")
                       set(OPT_FLAGS  "/O2")
                       set(OPT_FLAGS1 "/O1")
                       set(OPT_FLAGS2 "/O2")
                       set(OPT_FLAGS3 "/O3")
		        endif()
           endif()
        elseif(COMPILER_NAME STREQUAL ifx)
            if(CMAKE_BUILD_TYPE STREQUAL Debug)
                set(OPT_FLAGS "/nologo")
                set(OPT_FLAGS0 "/Od")
                set(OPT_FLAGS1 "/debug:full /check /check:noarg_temp_created /traceback /nologo /CB /Warn")
            elseif(CMAKE_BUILD_TYPE STREQUAL Release)
                set(OPT_FLAGS "/nologo")
                set(OPT_FLAGS0 "/Od")
                set(OPT_FLAGS1 "/O2")
            endif()
            set(OPT_FLAGS2 "/fpp /Qopt-report:0")
        elseif(COMPILER_NAME STREQUAL gfortran)
            if(ARCH32)
                set(OPT_FLAGSC "-m32")
            else()
                set(OPT_FLAGSC "-m64")
            endif()
            if(CMAKE_BUILD_TYPE STREQUAL Debug)
                set(OPT_FLAGS0 "-O0 -std=f2008 -Wall -Wno-maybe-uninitialized -Wno-conversion -Wno-character-truncation -fbacktrace -fdec-math -ffree-line-length-0 -fall-intrinsics -fmax-stack-var-size=128000000")
                set(OPT_FLAGS1 "-O0 -std=f2008 -Wall -Wno-maybe-uninitialized -Wno-conversion -Wno-character-truncation -fbacktrace -fdec-math -ffree-line-length-0 -fall-intrinsics -fmax-stack-var-size=128000000")
            elseif(CMAKE_BUILD_TYPE STREQUAL Release)
                set(OPT_FLAGS0 "-O0 -std=f2008 -ffree-line-length-0 -fdec-math -fall-intrinsics -fmax-stack-var-size=128000000")
                set(OPT_FLAGS1 "-O0 -std=f2008 -ffree-line-length-0 -fdec-math -fall-intrinsics -fmax-stack-var-size=128000000")
            endif()
            set(OPT_FLAGS2 "")
        endif()
    elseif(UNIX)
        # Covers Linux and macOS
        # Flags are minimal here and should be updated (notably on optimization)
        if(COMPILER_NAME STREQUAL gfortran)
            if(ARCH32)
                set(OPT_FLAGSC "-m32")
            else()
                set(OPT_FLAGSC "-m64")
            endif()
            if(CMAKE_BUILD_TYPE STREQUAL Debug)
	            set(CMAKE_Fortran_FLAGS_DEBUG "-cpp -std=f2008 -Wall -Wno-maybe-uninitialized -Wno-conversion -Wno-character-truncation -fbacktrace -fdec-math -ffree-line-length-0 -fPIC -fall-intrinsics -fno-stack-arrays -fmax-stack-var-size=128000000")
                set(OPT_FLAGS0 "-O0")
                set(OPT_FLAGS1 "-O0")
              elseif(CMAKE_BUILD_TYPE STREQUAL Release)
		        set(CMAKE_Fortran_FLAGS_RELEASE "-cpp -std=f2008 -ffree-line-length-0 -fPIC -fdec-math -fall-intrinsics -fno-stack-arrays -fmax-stack-var-size=128000000")
                set(OPT_FLAGS0 "-O0")
                set(OPT_FLAGS1 "-O0")
            endif()
        elseif(COMPILER_NAME STREQUAL ifort)
          if(CMAKE_BUILD_TYPE STREQUAL Debug)
	        set(CMAKE_Fortran_FLAGS_DEBUG "-g -warn -cpp -ffree-line-length-none -fPIC -heap-arrays")
                #set(OPT_FLAGS "-g" )
		        #set(OPT_FLAGS0 "-g" )
                #set(OPT_FLAGS1 "-g")
          elseif(CMAKE_BUILD_TYPE STREQUAL Release)
		        set(CMAKE_Fortran_FLAGS_RELEASE "-warn -cpp -ffree-line-length-none -fPIC -heap-arrays")
                set(OPT_FLAGS0 "-O0")
                set(OPT_FLAGS1 "-O2")
          endif()
        elseif(COMPILER_NAME STREQUAL ifx)
            if(CMAKE_BUILD_TYPE STREQUAL Debug)
                set(OPT_FLAGS0 "-O0 -Warn" )
                set(OPT_FLAGS1 "-g  -Warn")
            elseif(CMAKE_BUILD_TYPE STREQUAL Release)
                set(OPT_FLAGS0 "-O0")
                set(OPT_FLAGS1 "-O2")
            endif()
        endif()
    endif()

endmacro()
